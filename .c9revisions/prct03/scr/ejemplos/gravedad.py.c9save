{"ts":1382030996639,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#-------------------------------------------------------------------------------\n#Modulo: gravedad\n#\n#Contenido: algunas constantes y funciones sobre fisica gravitatoria\n#\n#Autor: Coromoto Leon\n#\n#Referencia: Introduccion a la programacion con Python. Marzal y Garcia. 2006\n#\n#-------------------------------------------------------------------------------\n#Constantes:\n# G: Constante de gravitacion universal\n# M_Tierra: Masa de la Tierra en kilos\n# R_Tierra: Radio de la Tierra en metros\n# M_Luna: Masa de la Luna en kilos\n# R_Luna: Radio de la Luna en metros\n#\n#Funciones:\n#\n# fuerza_gravitatoria: calcula la fuerza gravitatoria existente entre dos cuerpos\n#   entrada:\n#     M: masa de un cuerpo en kilogramos\n#     m: masa de otro cuerpo en kilogramos\n#     r: distancia entre ellos en metros\n#   salida:\n#     fuerza en Newtons\n#\n# distancia: calcula la distancia que separa dos cuerpos atraidos por una fuerza\n#            gravitatoria determinada\n#   entrada:\n#     M: masa de un cuerpo en kilogramos\n#     m: masa de otro cuerpo en kilogramos\n#     F: fuerza gravitatoria experimentada en metros\n#   salida:\n#     distancia en metros\n#\n# velocidad_escape: calcula la velocidada necesaria para escapar de la atraccion\n#                   gravitatoria de un cuerpo esferico\n#   entrada:\n#     M: masa de un cuerpo en kilogramos\n#     R: radio del cuerpo en metros\n#   salida:\n#     velocidad en metros por segundo\n#\n#-------------------------------------------------------------------------------\n#Historia:\n#   * Creado el 01.12.2010\n#   * Modificado el 15.12.2011:\n#      - se incluyen estos comentarios\n#      - se incluye la prueba del modulo\n#-------------------------------------------------------------------------------\n\nfrom math import sqrt\n\nG = 6.67e-11\nM_Tierra = 5.97e24\nR_Tierra = 6.37e6\nM_Luna = 7.35e22\nR_Luna = 1.74e6\n\ndef fuerza_gravitatoria(M, m, r):\n  return G * ((M * m) / (r ** 2))\n\ndef distancia(M, m, F):\n  return sqrt(G * M * m / F)\n\ndef velocidad_escape(M, R):\n  return sqrt(2 * G * M / R)\n\nve_Tierra = velocidad_escape(M_Tierra, R_Tierra)\nve_Luna = velocidad_escape(M_Luna, R_Luna)\n"]],"start1":0,"start2":0,"length1":0,"length2":2116}]],"length":2116}
