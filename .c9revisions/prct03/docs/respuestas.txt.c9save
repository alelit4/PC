{"ts":1382030375860,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1382030386296,"patch":[[{"diffs":[[1,"\n\n"]],"start1":0,"start2":0,"length1":0,"length2":2}]],"length":2,"saved":false}
{"ts":1382030585340,"patch":[[{"diffs":[[0,"\n"],[-1,"\n"],[1,"13. Describa el contenido del fichero gravedad.py. ¿Cuántas partes se distinguen? ¿Qué clase de elementos aparecen en el mismo?\n  \n  Se pueden distinguir diversas partes en este fichero, primero encontramos un header en donde se nos muestran datos tanto del autor del fichero como una descripción detallada de cada una de las constantes y funciones que podemos encontrar en este, todo esto en forma de comentarios. En la descripción de las funciones podemos ver lo que calculan, las entradas y las salidas. Para finalizar esta zona acabamos con una descripción del historial que ha tenido el fichero. \n  \n  Más adelante pasamos al código del módulo propiamente dicho. Se comienza con una zona en donde se declaran las llamadas a las funciones de los módulos externos que vamos a utilizar. \n  \n  Después encontramos una zona en la que se declaran e inicializan las constantes que se van a utilizar dentro del módulo. A continuación vemos la zona de declaración de las funciones del módulo. \n  \n  Para acabar, en el final del fichero podemos ver una zona en donde se inicializan otras constantes gracias a la asignación del resultado de dos llamadas con diferentes parámetros de una de las funciones del módulo. \n  \n    \n14. ¿Qué es un módulo?\n\n  Un módulo es un fichero que posee un conjunto de funciones que se pueden reutilizar. Estos módulos pueden ser estándar(como math, random o sys) o pueden estar definidos por el usuario.\n  \n\n16. Describa el contenido del fichero main_gravedad.py. ¿Cuál es la principal diferencia con el fichero gravedad.py?\n\n  Este fichero es igual que gravedad.py y posee las mismas partes pero le añade al final una nueva zona, la zona de pruebas en donde hay un ejemplo de uso de una de las funciones del módulo y de una de las constantes de este, para luego mostrar estos contenido por pantalla. \n  \n18. Describa la salida de la ejecución del fichero main_gravedad.py. ¿De qué clase de elementos se está verificando el correcto funcionamiento?\n\n  La salida de la ejecución de este fichero es la de las pruebas que tienen al finalizar el fichero, de lo que hablamos en el apartado anterior. Lo que hace es verificar el funcionamiento de la función velocidad_escape mediante el paso de una serie de parámetros y el de la constante ve_Tierra.\n  \n\n20. Describa el contenido del fichero uso_gravedad.py.¿Cuál es la principal diferencia con el fichero main_gravedad.py?\n\n  Este fichero empieza con una zona en donde importa del fichero gravedad.py la función velicidad_escape y la constante ve_Tierra; para utilizarlos más abajo y mostrar los resultados de estos por pantalla. \n  \n\n23. Describa el contenido del fichero gravedad.pyc.\n\n  Para no tener que interpretar o analizar cada vez que se ejecuta uso_gravedad.py el módulo gravedad.py lo que se hace es que crea el fichero gravedad.pyc para ya tenerlo listo. El contenido de este no es visible para nosotros ya que simplemente guarda la traducción intermedia para no tener que revisar el módulo cada vez que ejecutemos uso_gravedad.py.\n  \n24. ¿En qué directorio está instalado el intérprete de Python?\n    /usr/bin/python\n    "]],"start1":0,"start2":0,"length1":2,"length2":3107}]],"length":3107,"saved":false}
{"contributors":[],"silentsave":false,"ts":1382030783662,"patch":[[{"diffs":[[1,"Programación Científica\nAlexandra Rivero García\nRespuestas Práctica 3\n\nGit Repository: https://github.com/alelit4/PC\n"],[0,"\n13. Des"]],"start1":0,"start2":0,"length1":8,"length2":125},{"diffs":[[0,"chero. \n"],[-1,"  "],[0,"\n  Más a"]],"start1":712,"start2":712,"length1":18,"length2":16}]],"length":3222,"saved":false}
{"ts":1382030822866,"patch":[[{"diffs":[[0,"Python?\n"],[1,"    \n"],[0,"    /usr"]],"start1":3190,"start2":3190,"length1":16,"length2":21},{"diffs":[[0,"/python\n"],[-1,"    "],[1,"\n"]],"start1":3215,"start2":3215,"length1":12,"length2":9}]],"length":3224,"saved":false}
{"ts":1382030852497,"patch":[[{"diffs":[[0,"python\n\n"],[1,"25. Modifique el fichero uso_gravedad.py para que sea ejecutable. (a˜nadir en la primera l´ınea del fichero\nuso_gravedad.py lo siguiente #! < resultado de la pregunta 24 > )\n\n26. Ejecute el fichero uso_gravedad.py. (./uso_gravedad.py)\n\n27. En caso necesario modifique el fichero uso_gravedad.py para que sea ejecutable. (chmod u+x uso_gravedad.py)\n\n28. El objetivo de los siguientes ejercicios es crear un m´odulo escrito en Python. Con el programa se comprobar\n´a el mantenimiento de las identidades matem´aticas en una m´aquina de c´omputo. Cree un subdirectorio\nllamado identidades dentro de src/."]],"start1":3216,"start2":3216,"length1":8,"length2":608}]],"length":3824,"saved":false}
